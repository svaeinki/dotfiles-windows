# Set execution policy
Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Force

Write-Host "`nüîß Iniciando setup personalizado..." -ForegroundColor Cyan

# ‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñë‚ñà
# Verificar si Scoop est√° instalado
if (-not (Get-Command scoop -ErrorAction SilentlyContinue)) {
    Write-Host "üì¶ Instalando Scoop..." -ForegroundColor Yellow
    Invoke-RestMethod "https://get.scoop.sh" | Invoke-Expression
} else {
    Write-Host "‚úÖ Scoop ya instalado" -ForegroundColor Green
}

# ‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñà
# Buckets necesarios
if (-not (scoop bucket list | Select-String 'extras')) {
    scoop bucket add extras
}
if (-not (scoop bucket list | Select-String 'versions')) {
    scoop bucket add versions
}

# ‚ñë‚ñà‚ñÄ‚ñÑ‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñà
# Apps necesarias
$apps = @('git', 'neovim', 'curl', 'sudo', 'jq', 'gcc', 'fzf', 'fastfetch', 'gh', 'nodejs')
foreach ($app in $apps) {
    if (-not (scoop list $app -q)) {
        Write-Host "üì• Instalando $app..." -ForegroundColor Yellow
        scoop install $app
    } else {
        Write-Host "‚úÖ $app ya instalado." -ForegroundColor Green
    }
}

# ‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñà‚ñÄ
# Instalar m√≥dulos de PowerShell
$modules = @('posh-git', 'PSReadLine', 'Terminal-Icons', 'PSFzf')
foreach ($module in $modules) {
    if (-not (Get-Module -ListAvailable -Name $module)) {
        Write-Host "üì• Instalando m√≥dulo $module..." -ForegroundColor Yellow
        Install-Module $module -Scope CurrentUser -Force
    } else {
        Write-Host "‚úÖ M√≥dulo $module ya instalado." -ForegroundColor Green
    }
}

# ‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñÄ‚ñà‚ñÄ‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñÄ‚ñÄ
# Configurar perfil de PowerShell
$profilePath = "$HOME\Documents\PowerShell\Microsoft.PowerShell_profile.ps1"

if (-not (Test-Path -Path $profilePath)) {
    New-Item -ItemType File -Path $profilePath -Force
}

# Copiar configuraci√≥n personalizada desde el repositorio
# Aseg√∫rate de que el archivo user_profile.ps1 est√© junto a este script
$userProfileCustom = "$PSScriptRoot\powershell\user_profile.ps1"

if (Test-Path $userProfileCustom) {
    Copy-Item $userProfileCustom -Destination $profilePath -Force
    Write-Host "‚úÖ Perfil de PowerShell copiado correctamente." -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è No se encontr√≥ user_profile.ps1 en el repositorio. Saltando copia." -ForegroundColor Red
}

# Ejecutar fastfetch si existe
if (Get-Command fastfetch -ErrorAction SilentlyContinue) {
    fastfetch
}

Write-Host "`n‚úÖ Setup completado correctamente." -ForegroundColor Cyan
